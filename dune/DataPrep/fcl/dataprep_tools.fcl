# dataprep_tools.fcl

# David Adams
# July 2017

# Some example tools for use in data prep.
#
# April 2018. Some protoDUNE-specific tools are moved to protodune_dataprep_tools.fcl

################################################################################
# Job ranges.
################################################################################

tools.jobRanges: {
  tool_type: FclIndexRangeTool
  LogLevel: 1
  events: { begin:0 end:0 labels: [] }  # Event range for selection and plotting.
}

################################################################################
# Ranges for channel-tick plots.
################################################################################

# tools.tickRanges is defined in DuneCommon/fcl/dunecommon_tools.fcl

tools.tickRanges.plotTicks: { begin:3000 end:4000 labels:["Plot ticks"] }
tools.tickRanges.plotAllTicks: { begin:0 end:0 labels:["All ticks"] }

################################################################################
# DUNE default clock data.
################################################################################

data.dune_ClockUnit: "Mtick"
data.dune_TriggerClockRate: 50000000.0

################################################################################
# Dumpers.
################################################################################

# Dump ADC channel contents to the log file.
tools.adcChannelDumper: {
  tool_type: AdcChannelDumper
  FileName: ""
  Prefix: "ADC dump: "
  NewFile: false
  MaxSample: 0
}

# Write all ROIs to a TTree.
tools.adcRoiTreeMaker: {
  tool_type: AdcRoiToTree
  LogLevel: 1
  OutFile: "adcrois.root"
  MetadataFields: []
}

################################################################################
# Event metrics.
################################################################################

# FEMB multiplicity for a single-APA detector.
tools.apa_evtviewNfemb: {
  tool_type: AdcEventViewer
  LogLevel: 2
  EventHists: ["hnfemb:21:0:21"]
  EventGraphs: ["event:events:1:nfemb:0:21"]
  ChannelRanges: []
  ChannelRangeLabel: ""
  ClockUnit: @local::data.dune_ClockUnit
  ClockRate: @local::data.dune_TriggerClockRate
}

################################################################################
# Event displays.
################################################################################

# Add ADC info to names and titles, e.g.
#  MyTitle = "Run %RUN%-%SUBRUN% event %EVENT% channel %CHAN%"
#  MyFileName = "run%0RUN%-%0SUBRUN%_evt%0EVENT%_cha%0CHAN%"
tools.adcStringBuilder: {
  tool_type: StandardAdcChannelStringTool
  LogLevel: 1
  RunWidth: 6
  SubRunWidth: 4
  EventWidth: 6
  ChannelWidth: 5
  CountWidth: 4
  FembWidth: 3
  TriggerWidth: 2
  TrigNames: [ "flag 0",  "flag 1",  "flag 2",  "flag 3",  "flag 4",
               "flag 5",  "flag 6",  "flag 7",  "random",  "flag 9",
               "flag 10", "flag 11",    "beam",     "CRT", "NGT"]
}

# Dump raw ADC channel waveform to a histogram.
tools.adcPlotRaw: {
  tool_type: AdcChannelPlotter
  LogLevel: 1
  HistTypes: ["raw"]
  HistName: "adc_%TYPE%_ev%EVENT%_ch%CHAN%"
  HistTitle: "ADC %TYPE% run %RUN% event %EVENT% channel %CHAN%"
  RootFileName: ""
  PlotFileName: ""
  PlotSamMin:    0
  PlotSamMax: 1000
  PlotSigOpt: pedestal
  PlotSigMin:  100
  PlotSigMax:    0
  PlotDistMin:   0
  PlotDistMax:   0
  ColorBad:   633
  ColorNoisy: 636
  LabelSize: 0.01
  SkipFlags: []
}

# Dump prepared ADC channel waveform to a histogram.
tools.adcPlotPrepared: {
  tool_type: AdcChannelPlotter
  LogLevel: 1
  HistTypes: ["prepared"]
  HistName: "adc_%TYPE%_ev%EVENT%_ch%CHAN%"
  HistTitle: "ADC %TYPE% run %RUN% event %EVENT% channel %CHAN%"
  RootFileName: ""
  PlotFileName: ""
  PlotSamMin:    0
  PlotSamMax: 1000
  PlotSigOpt: full
  PlotSigMin:    0
  PlotSigMax:    0
  PlotDistMin:   0
  PlotDistMax:   0
  ColorBad:   633
  ColorNoisy: 636
  LabelSize: 0.01
  SkipFlags: []
}

# Dump ADC channel distribution to a histogram.
tools.adcPlotRawDist: {
  tool_type: AdcChannelPlotter
  LogLevel: 1
  HistTypes: ["rawdist"]
  HistName: "adc_%TYPE%_ev%EVENT%_ch%CHAN%"
  HistTitle: "ADC %TYPE% run %RUN% event %EVENT% channel %CHAN%"
  RootFileName: ""
  PlotFileName: ""
  PlotSamMin:    0
  PlotSamMax: 1000
  PlotSigOpt: full
  PlotSigMin:    0
  PlotSigMax:    0
  PlotDistMin:   0
  PlotDistMax:   0
  ColorBad:   633
  ColorNoisy: 636
  LabelSize: 0.01
  SkipFlags: []
}

# Fit ADC distribution to get pedestal.
tools.def_adcPedestalFit: {
  tool_type: AdcPedestalFitter
  LogLevel: 1
  AdcRange: 4096
  FitOpt: 0
  FitPrecision: 1.0
  SkipFlags: []
  AdcFitRange: 100
  FitRmsMin:  1.0
  FitRmsMax: 20.0
  RemoveStickyCode: false
  HistName: "adcped_ev%0EVENT%_ch%0CHAN%"
  HistTitle: "ADC pedestal fit for run %RUN% event %EVENT% channel %CHAN%"
  PlotFileName: ""
  RootFileName: ""
  HistManager: ""
  PlotSizeX: 1400
  PlotSizeY: 1000
  PlotSplitX: 4
  PlotSplitY: 4
  PlotShowFit: 1
}

# Dump ADC map raw contents to the log file.
tools.adcRawDumper: {
  tool_type: AdcDataDumper
  FileName: ""
  Prefix: "ADC raw dump for "
  NewFile: false
  ShowChannelCount: true
  ShowTickCounts: false
  ShowRaw: true
  ShowPrepared: false
  ShowFirst: 0
  ShowRebin: 0
  ShowMax: 20
  ShowThreshold: 10
  ShowOpt: 1
}

# Dump ADC map contents to the log file.
tools.adcDumper: {
  tool_type: AdcDataDumper
  FileName: ""
  Prefix: "ADC dump for "
  NewFile: false
  ShowChannelCount: true
  ShowTickCounts: false
  ShowRaw: false
  ShowPrepared: true
  ShowFirst: 10
  ShowRebin: 5
  ShowMax: 30
  ShowThreshold: 10
  ShowOpt: 2
}

# Create png files showing ADC contents (ADC vs. channel vs. time).
tools.preparedAdcPlotter: {
  tool_type: AdcDataPlotter
  LogLevel: 1
  DataType: 0      # 0 for prepared, 1 for raw-pedestal
  DataView: ""
  TickRange: plotTicks
  TickRebin: 1
  ChannelRanges: []
  ClockFactor: 0.0
  ClockOffset: 0.0
  FembTickOffsets: []
  MaxSignal: 200
  SkipBadChannels: false
  EmptyColor: 18
  ChannelLineModulus: 2560
  ChannelLinePattern: [0, 800, 1600, 2080]
  Palette: 2020
  HistName: "hadcprp_evt%EVENT%_ch_%CHAN1%"
  HistTitle: "Prepared ADC for run %RUN% event %EVENT%"
  PlotTitle: ""
  PlotSizeX: 1400
  PlotSizeY: 1000
  PlotFileName: "adcprep_evt%EVENT%_ch%CHAN1%-%CHAN2%.png"
  RootFileName: ""    # or "adc_evt%EVENT%.root"
}
tools.signalAdcPlotter: {
  tool_type: AdcDataPlotter
  LogLevel: 1
  DataType: 2      # 0 for prepared, 1 for raw-pedestal
  DataView: ""
  TickRange: plotTicks
  TickRebin: 1
  ChannelRanges: []
  ClockFactor: 0.0
  ClockOffset: 0.0
  FembTickOffsets: []
  MaxSignal: 200
  SkipBadChannels: false
  EmptyColor: 18
  ChannelLineModulus: 2560
  ChannelLinePattern: [0, 800, 1600, 2080]
  Palette: 2020
  HistName: "hadcsig_evt%EVENT%_ch_%CHAN1%"
  HistTitle: "Signal ADC for run %RUN% event %EVENT%"
  PlotTitle: ""
  PlotSizeX: 1400
  PlotSizeY: 1000
  PlotFileName: "adcsig_evt%EVENT%_ch%CHAN1%-%CHAN2%.png"
  RootFileName: ""    # or "adc_evt%EVENT%.root"
}
tools.rawAdcPlotter: {
  tool_type: AdcDataPlotter
  LogLevel: 1
  DataType: 1      # 0 for prepared, 1 for raw-pedestal
  DataView: ""
  TickRange: plotTicks
  TickRebin: 1
  ChannelRanges: []
  ClockFactor: 0.0
  ClockOffset: 0.0
  FembTickOffsets: []
  MaxSignal: 200
  SkipBadChannels: false
  EmptyColor: 18
  ChannelLineModulus: 2560
  ChannelLinePattern: [0, 800, 1600, 2080]
  Palette: 2020
  HistName: "hadcraw_evt%EVENT%_ch_%CHAN1%"
  HistTitle: "Raw ADC for run %RUN% event %EVENT%"
  PlotTitle: ""
  PlotSizeX: 1400
  PlotSizeY: 1000
  PlotFileName: "adcrawRun%0RUN%Event%0EVENT%Chan%CHAN1%-%CHAN2%.png"
  RootFileName: ""   # or "adc_evt%EVENT%.root"
}

################################################################################
# Metric plotters.
################################################################################

# Pedestal for each channel.
tools.adcChannelPedestalPlotter: {
  tool_type: AdcChannelMetric
  LogLevel: 1
  DataView: ""
  Metric: pedestal
  PedestalReference: ""
  MetricSummaryView: ""
  MetricMin: 0
  MetricMax: 4096
  MetricBins: 0
  MetricLabel: "Pedestal"
  PlotUsesStatus: 0
  ChannelRanges: []
  ChannelLineModulus: 0
  ChannelLinePattern: []
  HistName: "hchped_%0RUN%_%0EVENT%_%0CHAN1%_%0CHAN2%"
  HistTitle: "ADC pedestals for run %RUN% event %EVENT%"
  PlotSizeX: 1400
  PlotSizeY:  500
  PlotFileName: "hchped_run%0RUN%_evt%0EVENT%_chans%0CHAN1%-%0CHAN2%.png"
  RootFileName: ""
  MetadataFlags: []
}

# Pedestal RMS for each channel.
tools.adcChannelPedestalRmsPlotter: {
  tool_type: AdcChannelMetric
  LogLevel: 1
  DataView: ""
  Metric: pedestalRms
  PedestalReference: ""
  MetricSummaryView: ""
  MetricMin: 0
  MetricMax: 11
  MetricBins: 0
  MetricLabel: "RMS"
  PlotUsesStatus: 0
  ChannelRanges: []
  ChannelLineModulus: 0
  ChannelLinePattern: []
  HistName: "hchpedrms_%0RUN%_%0EVENT%_%0CHAN1%_%0CHAN2%"
  HistTitle: "ADC pedestal RMS for run %RUN% event %EVENT%"
  PlotSizeX: 1400
  PlotSizeY:  500
  PlotFileName: "hchpedrms_run%0RUN%_evt%0EVENT%_chans%0CHAN1%-%0CHAN2%.png"
  RootFileName: ""
  MetadataFlags: []
}

# Sample RMS
tools.adcChannelSamplelRmsPlotter: @local::tools.adcChannelPedestalRmsPlotter
tools.adcChannelSamplelRmsPlotter.Metric: samRms
tools.adcChannelSamplelRmsPlotter.MetricLabel: "RMS [ke]"
tools.adcChannelSamplelRmsPlotter.HistName: "hchsamrms_%0RUN%_%0EVENT%_%0CHAN1%_%0CHAN2%"
tools.adcChannelSamplelRmsPlotter.HistTitle: "ADC sample RMS for run %RUN% event %EVENT%"
tools.adcChannelSamplelRmsPlotter.PlotFileName: "hchsamrms_run%0RUN%_evt%0EVENT%_chans%0CHAN1%-%0CHAN2%.png"

# Signal RMS
tools.adcChannelSignalRmsPlotter: @local::tools.adcChannelPedestalRmsPlotter
tools.adcChannelSignalRmsPlotter.Metric: sigRms
tools.adcChannelSignalRmsPlotter.MetricLabel: "RMS [ke]"
tools.adcChannelSignalRmsPlotter.HistName: "hchsigrms_%0RUN%_%0EVENT%_%0CHAN1%_%0CHAN2%"
tools.adcChannelSignalRmsPlotter.HistTitle: "ADC signal RMS for run %RUN% event %EVENT%"
tools.adcChannelSignalRmsPlotter.PlotFileName: "hchsigrms_run%0RUN%_evt%0EVENT%_chans%0CHAN1%-%0CHAN2%.png"

# Not-signal RMS
tools.adcChannelNotSignalRmsPlotter: @local::tools.adcChannelPedestalRmsPlotter
tools.adcChannelNotSignalRmsPlotter.Metric: nsgRms
tools.adcChannelNotSignalRmsPlotter.MetricLabel: "RMS [ke]"
tools.adcChannelNotSignalRmsPlotter.HistName: "hchnsgrms_%0RUN%_%0EVENT%_%0CHAN1%_%0CHAN2%"
tools.adcChannelNotSignalRmsPlotter.HistTitle: "ADC not-signal RMS for run %RUN% event %EVENT%"
tools.adcChannelNotSignalRmsPlotter.PlotFileName: "hchnsgrms_run%0RUN%_evt%0EVENT%_chans%0CHAN1%-%0CHAN2%.png"

adcSampleFreq: 2000
adcPlotDftTemplate: {
          tool_type: AdcChannelDftPlotter
           LogLevel: 1
       PlotDataView: ""
  ChannelStatusFlag: 0
   ChannelSelection: ""
         SampleFreq: @local::adcSampleFreq
           PlotName: ""
   PlotSummaryNames: []
   HistSummaryTitle: ""
               XMin: 0.0
               XMax: 0.0
            YMinLog: 0.0
  PlotChannelRanges: []    # Empty makes one plot for each channel
  PlotChannelGroups: []    # Empty makes one plot for each channel
  PlotOverlayGroups: 1     # Rnages in a group are drawn on the same pad.
          PlotSizeX: 1400
          PlotSizeY: 1000
         PlotSplitX: 4
         PlotSplitY: 4
}

# DFT amplitudes
tools.adcPlotDftMag: @local::adcPlotDftTemplate
tools.adcPlotDftMag.Variable: magnitude
tools.adcPlotDftMag.SampleFreq: @local::adcSampleFreq
tools.adcPlotDftMag.YMax: 50
tools.adcPlotDftMag.HistName: "hdftmags_run%0RUN%_evt%0EVENT%_ch%0CHAN%"
tools.adcPlotDftMag.HistTitle: "DFT amplitudes for run %RUN% event %EVENT% channel %CHAN%"
tools.adcPlotDftMag.PlotName: "dftmag_run%0RUN%_evt%0EVENT%_ch%0CHAN%.png"

# DFT Phases
tools.adcPlotDftPhase: @local::adcPlotDftTemplate
tools.adcPlotDftPhase.Variable: phase
tools.adcPlotDftPhase.HistName: "hdftphas_run%0RUN%_evt%0EVENT%_ch%0CHAN%"
tools.adcPlotDftPhase.HistTitle: "DFT phases for run %RUN% event %EVENT% channel %CHAN%"
tools.adcPlotDftPhase.PlotName: "dftpha_run%0RUN%_evt%0EVENT%_ch%0CHAN%.png"

# DFT power
tools.adcPlotDftPower: @local::adcPlotDftTemplate
tools.adcPlotDftPower.Variable: power
tools.adcPlotDftPower.YMax: 10000
tools.adcPlotDftPower.NBinX: 50
tools.adcPlotDftPower.HistName: "hdftpower_run%0RUN%_evt%0EVENT%_ch%0CHAN%"
tools.adcPlotDftPower.HistTitle: "DFT power for run %RUN% event %EVENT% channel %CHAN%"
tools.adcPlotDftPower.HistSummaryTitles:["DFT power for run %RUN%", "DFT power for run %RUN% event %EVENT%"]
tools.adcPlotDftPower.PlotName: "dftpower_run%0RUN%_evt%0EVENT%_ch%0CHAN%.png"
tools.adcPlotDftPower.PlotSummaryNames: ["dftpowtlog_run%0RUN%.{png,tpad}", ""]


# DFT power/tick
tools.adcPlotDftTickPower: @local::tools.adcPlotDftPower
tools.adcPlotDftTickPower.Variable: "power/tick"
tools.adcPlotDftTickPower.YMax: -2.0
tools.adcPlotDftTickPower.NBinX: 50
tools.adcPlotDftTickPower.HistName: "hdftpowt_run%0RUN%_evt%0EVENT%_ch%0CHAN%"
tools.adcPlotDftTickPower.HistTitle: "DFT power for run %RUN% event %EVENT% channel %CHAN%"
tools.adcPlotDftTickPower.PlotName: "dftpowt_run%0RUN%_evt%0EVENT%_ch%0CHAN%.png"

# DFT power/tick with log scale.
tools.adcPlotDftTickPowerLog: @local::tools.adcPlotDftTickPower
tools.adcPlotDftTickPowerLog.YMinLog: 0.01
tools.adcPlotDftTickPowerLog.YMax: 100.0
tools.adcPlotDftTickPowerLog.HistName: "hdftpowtlog_run%0RUN%_evt%0EVENT%_ch%0CHAN%"
tools.adcPlotDftTickPowerLog.PlotName: "dftpowtlog_run%0RUN%_evt%0EVENT%_ch%0CHAN%.png"

################################################################################
# Data prep reconstruction tools.
################################################################################

# Extract raw data from a digit.
tools.digitReader: {
  tool_type: AcdDigitReader
  LogLevel: 1
}

# Fill sample from 12-bit ADC data.
tools.adcSampleFiller: {
  tool_type: AdcSampleFiller
  LogLevel: 1
  AdcUnderflow: 0
  AdcOverflow: 4095
}

# Fill sample and apply calibration.
# May 2020: Switch to fix01 of calib based on 2018-dec data.
tools.adcSampleCalibration: {
  tool_type: FloatArrayGainCalibration
  LogLevel: 1
  Unit: "ke/tick"
  GainDefault: 0.0
  AdcUnderflowDefault: 0
  AdcOverflowDefault: 4095
  GainTool: "areaGain_calib20191213_dec18ext"
  ScaleFactor: 1.0
}

# Perform deconvolution with SignalShapingService.
tools.adcVintageDeconvoluter: {
  tool_type: VintageDeconvoluter
  LogLevel: 1
}

# Subtract baseline after deconvolution
tools.adcSubtractBaseline: {
  tool_type: SubtractBaseline
  LogLevel: 1
  BaseSampleBins: 32
  BaseVarCut: 5.
}

# Find one ROI signals that includes all samples.
tools.adcKeepAllSignalFinder: {
  tool_type: AdcKeepAllSignalFinder
  LogLevel: 1
  DataPath: ""
}

# Scale samples from ke to ADC count.
tools.adcScaleKeToAdc: {
  tool_type: AdcSampleScaler
  LogLevel: 1
  ScaleFactor: 40.0
  InputUnit: "ke/tick"
  OutputUnit: "ADC count"
}

# Scale samples from ke to ADC count.
tools.adcScaleAdcToKe: {
  tool_type: AdcSampleScaler
  LogLevel: 1
  ScaleFactor: 0.025
  InputUnit: "ADC count"
  OutputUnit: "ke/tick"
}

# Find ADC signals with simple threshold algorithm.
tools.adcThresholdSignalFinder: {
  tool_type: AdcThresholdSignalFinder
  LogLevel: 1
  Threshold: "3.0"   # Works for MC may2018
  BinsBefore: 10
  BinsAfter: 20
  FlagPositive: true
  FlagNegative: true
}

# Find calibrated signals with simple threshold algorithm.
tools.calibThresholdSignalFinder: @local::tools.adcThresholdSignalFinder
tools.calibThresholdSignalFinder.Threshold: 0.5

# Find ADC signals with Dune 35t algorithm.
tools.adcDuneSignalFinder: {
  tool_type: DuneAdcSignalFinder
  LogLevel: 1
  NoiseSigma:  0.0
  NSigmaStart: 3.0
  NSigmaEnd:   1.0
  TicksBefore: 50
  TicksAfter:  50
}

# Dynamic signal finder.
tools.adcNoiseSignalFinder: {
  tool_type: AdcNoiseSignalFinder
  LogLevel: 1
  SigFracMax: 0.80
  ThresholdMin: 20.0
  ThresholdRatio: 4.0
  ThresholdRatioTol: 0.1
  MaxLoop: 20.0
  BinsBefore: 10
  BinsAfter: 20
  FlagPositive: true
  FlagNegative: true
}
tools.calibNoiseSignalFinder: @local::tools.adcNoiseSignalFinder
tools.calibNoiseSignalFinder.ThresholdMin: 0.2

# Do FFT.
tools.adcFFT: {
  tool_type: AdcChannelFFT
  LogLevel:  1
  FirstTick: 0
  NTick:     0
  NormOpt:   1
  Action:    3
  ReturnOpt: 1
  DataView: ""
}

# Undo FFT.
tools.adcFFTinv: {
  tool_type:  AdcChannelFFT
  LogLevel:   1
  FirstTick:  0
  NTick:      0
  NormOpt:    1
  Action:    13
  ReturnOpt: 10
  DataView: ""
}

# Fetch ROI info and hists.
tools.adcRoiViewer: {
  tool_type: AdcRoiViewer
  LogLevel: 1
  SigThresh: 0.0
  TickBorder: 0
  RoiHistOpt:  1
  FitOpt:   0
  RoiPlotOpt:  2
  StartTime: 0
  PulserStepCharge: 0.0
  PulserDacOffset: 0.0
  PulserChargeUnit: ""
  RunDataTool: ""
  TickOffsetTool: ""
  MaxRoiPlots: 1000
  RoiPlotPadX: 4
  RoiPlotPadY: 4
  SumPlotPadX: 4
  SumPlotPadY: 4
  ChannelLineModulus: 0
  ChannelLinePattern: []
  SumNegate: false
  SumHists: []
  ChanSumHists: []
  ChannelRanges: []
  RoiRootFileName: ""
  SumRootFileName: ""
  ChanSumRootFileName: ""
  PlotLabels: []
}
tools.adcRoiFitter: {
  tool_type: AdcRoiViewer
  SigThresh: 0.0
  TickBorder: 0
  LogLevel: 1
  RoiHistOpt:  1
  FitOpt:   1
  RoiPlotOpt:  2
  StartTime: 0
  PulserStepCharge: 0.0
  PulserDacOffset: 0.0
  PulserChargeUnit: ""
  RunDataTool: ""
  TickOffsetTool: ""
  MaxRoiPlots: 1000
  RoiPlotPadX: 4
  RoiPlotPadY: 4
  SumPlotPadX: 4
  SumPlotPadY: 4
  ChannelLineModulus: 0
  ChannelLinePattern: []
  SumNegate: false
  SumHists: []
  ChanSumHists: []
  ChannelRanges: []
  RoiRootFileName: ""
  SumRootFileName: ""
  ChanSumRootFileName: ""
  PlotLabels: []
}

# Build ROI w.r.t. local baseline
tools.adcDPhase3x1x1LocalRoiBuilder: {
  tool_type: AdcDPhase3x1x1LocalRoiBuilder
  LogLevel: 1
  BinsToAverageForPedestal: 100
  BinsToSkip: 2
  UseStandardDeviation: true
  NConsecBinsAboveThreshold1: 9
  NSigmaStart1: 0.5
  NSigmaEnd1: 0.0
  NConsecBinsAboveThreshold2: 4
  NSigmaStart2: 1.8
  NSigmaMax: 5
  PadLow: 10
  PadHigh: 30
}

# Build ROI w.r.t 0
tools.adcDPhase3x1x1RoiBuilder: {
  tool_type: AdcDPhase3x1x1RoiBuilder
  LogLevel: 1
  BinsToAverageForRMS: 100
  BinsToSkip: 0
  UseStandardDeviation: false
  NConsecBinsAboveThreshold1: 30
  NSigmaStart1: 1.0
  NSigmaEnd1: 0.0
  NConsecBinsAboveThreshold2: 10
  NSigmaStart2: 2.0
  NSigmaMax: 7.0
  PadLow: 20
  PadHigh: 50
}

# Split data keeping ROIs.
tools.adcSliceRoi: {
  tool_type: AdcRoiSlicer
  LogLevel: 1
  OutViewName: rois
  SliceOpt: 1
  CopyRaw: false
}

# Split data keeping not ROIs.
tools.adcSliceNotRoi: {
  tool_type: AdcRoiSlicer
  LogLevel: 1
  OutViewName: notrois
  SliceOpt: 2
  CopyRaw: false
}

